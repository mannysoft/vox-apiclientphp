<?php 
/*
 * Mannysoft
 *
 * This file was automatically generated by APIMATIC BETA v2.0 on 04/03/2015
 */

namespace Mannysoft\Models;

use JsonSerializable;

class AddressModel implements JsonSerializable {
    /**
     * The salutation to use with this address
     * @param string $salutation public property
     */
    protected $salutation;

    /**
     * The name of the company residing at this address
     * @param string|null $companyName public property
     */
    protected $companyName;

    /**
     * The description of the company residing at this address
     * @param string|null $companyDescription public property
     */
    protected $companyDescription;

    /**
     * The first name of the person residing at this address
     * @param string|null $firstName public property
     */
    protected $firstName;

    /**
     * The last name of the person residing at this address
     * @param string|null $lastName public property
     */
    protected $lastName;

    /**
     * The three letter identifier for the address country
     * @param string $countryCodeA3 public property
     */
    protected $countryCodeA3;

    /**
     * The name of the address city
     * @param string $city public property
     */
    protected $city;

    /**
     * The zip code
     * @param string $zipCode public property
     */
    protected $zipCode;

    /**
     * The street name
     * @param string $streetName public property
     */
    protected $streetName;

    /**
     * The building number
     * @param string $buildingNumber public property
     */
    protected $buildingNumber;

    /**
     * The building letter
     * @param string|null $buildingLetter public property
     */
    protected $buildingLetter;

    /**
     * A human readable description of the address
     * @param string|null $customerReference public property
     */
    protected $customerReference;

    /**
     * A list of extra fields
     * @param array|null $extraFields public property
     */
    protected $extraFields;

    /**
     * The type of numbers this address will be used with
     * @param string $didType public property
     */
    protected $didType;

    /**
     * The three letter identifier for the country in which numbers will be used with this address
     * @param string $destinationCountryCodeA3 public property
     */
    protected $destinationCountryCodeA3;

    protected $identityDocumentProof = null;

    /**
     * Constructor to set initial or default values of member properties
	 * @param   string            $salutation                 Initialization value for the property $this->salutation              
	 * @param   string|null       $companyName                Initialization value for the property $this->companyName             
	 * @param   string|null       $companyDescription         Initialization value for the property $this->companyDescription      
	 * @param   string|null       $firstName                  Initialization value for the property $this->firstName               
	 * @param   string|null       $lastName                   Initialization value for the property $this->lastName                
	 * @param   string            $countryCodeA3              Initialization value for the property $this->countryCodeA3           
	 * @param   string            $city                       Initialization value for the property $this->city                    
	 * @param   string            $zipCode                    Initialization value for the property $this->zipCode                 
	 * @param   string            $streetName                 Initialization value for the property $this->streetName              
	 * @param   string            $buildingNumber             Initialization value for the property $this->buildingNumber          
	 * @param   string|null       $buildingLetter             Initialization value for the property $this->buildingLetter          
	 * @param   string|null       $customerReference          Initialization value for the property $this->customerReference       
	 * @param   array|null        $extraFields                Initialization value for the property $this->extraFields             
	 * @param   string            $didType                    Initialization value for the property $this->didType                 
	 * @param   string            $destinationCountryCodeA3   Initialization value for the property $this->destinationCountryCodeA3
     */
    public function __construct()
    {
    
        $this->salutation               = func_get_arg(0);
        $this->companyName              = func_get_arg(1);
        $this->companyDescription       = func_get_arg(2);
        $this->firstName                = func_get_arg(3);
        $this->lastName                 = func_get_arg(4);
        $this->countryCodeA3            = func_get_arg(5);
        $this->city                     = func_get_arg(6);
        $this->zipCode                  = func_get_arg(7);
        $this->streetName               = func_get_arg(8);
        $this->buildingNumber           = func_get_arg(9);
        $this->buildingLetter           = func_get_arg(10);
        $this->customerReference        = func_get_arg(11);
        $this->extraFields              = func_get_arg(12);
        $this->didType                  = func_get_arg(13);
        $this->destinationCountryCodeA3 = func_get_arg(14);
        $this->identityDocumentProof    = @func_get_arg(15);
    }

    /**
     * Return a property of the response if it exists.
     * Possibilities include: code, raw_body, headers, body (if the response is json-decodable)
     * @return mixed
     */
    public function __get($property)
    {
        if (property_exists($this, $property)) {
            //UTF-8 is recommended for correct JSON serialization
            $value = $this->$property;
            if (is_string($value) && mb_detect_encoding($value, "UTF-8", TRUE) != "UTF-8") {
                return utf8_encode($value);
            }
            else {
                return $value;
            }
        }
    }
    
    /**
     * Set the properties of this object
     * @param string $property the property name
     * @param mixed $value the property value
     */
    public function __set($property, $value)
    {
        if (property_exists($this, $property)) {
            //UTF-8 is recommended for correct JSON serialization
            if (is_string($value) && mb_detect_encoding($value, "UTF-8", TRUE) != "UTF-8") {
                $this->$property = utf8_encode($value);
            }
            else {
                $this->$property = $value;
            }
        }

        return $this;
    }

    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['salutation']               = $this->salutation;
        $json['companyName']              = $this->companyName;
        $json['companyDescription']       = $this->companyDescription;
        $json['firstName']                = $this->firstName;
        $json['lastName']                 = $this->lastName;
        $json['countryCodeA3']            = $this->countryCodeA3;
        $json['city']                     = $this->city;
        $json['zipCode']                  = $this->zipCode;
        $json['streetName']               = $this->streetName;
        $json['buildingNumber']           = $this->buildingNumber;
        $json['buildingLetter']           = $this->buildingLetter;
        $json['customerReference']        = $this->customerReference;
        $json['extraFields']              = $this->extraFields;
        $json['didType']                  = $this->didType;
        $json['destinationCountryCodeA3'] = $this->destinationCountryCodeA3;
        if ($this->identityDocumentProof) {
            $json['identityDocumentProof']    = $this->identityDocumentProof;
        }
        
        return $json;
    }
}
